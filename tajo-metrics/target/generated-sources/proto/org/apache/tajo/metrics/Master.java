// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master_metrics.proto

package org.apache.tajo.metrics;

public final class Master {
  private Master() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code tajo.metrics.Cluster}
   */
  public enum Cluster
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UPTIME = 0;</code>
     */
    UPTIME(0, 0),
    /**
     * <code>TOTAL_NODES = 1;</code>
     */
    TOTAL_NODES(1, 1),
    /**
     * <code>ACTIVE_NODES = 2;</code>
     */
    ACTIVE_NODES(2, 2),
    /**
     * <code>LOST_NODES = 3;</code>
     */
    LOST_NODES(3, 3),
    /**
     * <code>TOTAL_MEMORY = 4;</code>
     */
    TOTAL_MEMORY(4, 4),
    /**
     * <code>FREE_MEMORY = 5;</code>
     */
    FREE_MEMORY(5, 5),
    /**
     * <code>TOTAL_VCPU = 6;</code>
     */
    TOTAL_VCPU(6, 6),
    /**
     * <code>FREE_VCPU = 7;</code>
     */
    FREE_VCPU(7, 7),
    ;

    /**
     * <code>UPTIME = 0;</code>
     */
    public static final int UPTIME_VALUE = 0;
    /**
     * <code>TOTAL_NODES = 1;</code>
     */
    public static final int TOTAL_NODES_VALUE = 1;
    /**
     * <code>ACTIVE_NODES = 2;</code>
     */
    public static final int ACTIVE_NODES_VALUE = 2;
    /**
     * <code>LOST_NODES = 3;</code>
     */
    public static final int LOST_NODES_VALUE = 3;
    /**
     * <code>TOTAL_MEMORY = 4;</code>
     */
    public static final int TOTAL_MEMORY_VALUE = 4;
    /**
     * <code>FREE_MEMORY = 5;</code>
     */
    public static final int FREE_MEMORY_VALUE = 5;
    /**
     * <code>TOTAL_VCPU = 6;</code>
     */
    public static final int TOTAL_VCPU_VALUE = 6;
    /**
     * <code>FREE_VCPU = 7;</code>
     */
    public static final int FREE_VCPU_VALUE = 7;


    public final int getNumber() { return value; }

    public static Cluster valueOf(int value) {
      switch (value) {
        case 0: return UPTIME;
        case 1: return TOTAL_NODES;
        case 2: return ACTIVE_NODES;
        case 3: return LOST_NODES;
        case 4: return TOTAL_MEMORY;
        case 5: return FREE_MEMORY;
        case 6: return TOTAL_VCPU;
        case 7: return FREE_VCPU;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Cluster>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Cluster>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Cluster>() {
            public Cluster findValueByNumber(int number) {
              return Cluster.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.apache.tajo.metrics.Master.getDescriptor().getEnumTypes().get(0);
    }

    private static final Cluster[] VALUES = values();

    public static Cluster valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Cluster(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tajo.metrics.Cluster)
  }

  /**
   * Protobuf enum {@code tajo.metrics.Query}
   *
   * <pre>
   * Query Coordinator
   * </pre>
   */
  public enum Query
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUBMITTED = 1;</code>
     */
    SUBMITTED(0, 1),
    /**
     * <code>COMPLETED = 2;</code>
     */
    COMPLETED(1, 2),
    /**
     * <code>RUNNING = 3;</code>
     */
    RUNNING(2, 3),
    /**
     * <code>ERROR = 4;</code>
     */
    ERROR(3, 4),
    /**
     * <code>FAILED = 5;</code>
     */
    FAILED(4, 5),
    /**
     * <code>KILLED = 6;</code>
     */
    KILLED(5, 6),
    /**
     * <code>NUM_PER_HOUR = 7;</code>
     */
    NUM_PER_HOUR(6, 7),
    /**
     * <code>MAX_IO_THROUGHPUT = 8;</code>
     */
    MAX_IO_THROUGHPUT(7, 8),
    /**
     * <code>AVG_IO_THROUGHPUT = 9;</code>
     */
    AVG_IO_THROUGHPUT(8, 9),
    /**
     * <code>PENDING_QUERIES = 10;</code>
     */
    PENDING_QUERIES(9, 10),
    ;

    /**
     * <code>SUBMITTED = 1;</code>
     */
    public static final int SUBMITTED_VALUE = 1;
    /**
     * <code>COMPLETED = 2;</code>
     */
    public static final int COMPLETED_VALUE = 2;
    /**
     * <code>RUNNING = 3;</code>
     */
    public static final int RUNNING_VALUE = 3;
    /**
     * <code>ERROR = 4;</code>
     */
    public static final int ERROR_VALUE = 4;
    /**
     * <code>FAILED = 5;</code>
     */
    public static final int FAILED_VALUE = 5;
    /**
     * <code>KILLED = 6;</code>
     */
    public static final int KILLED_VALUE = 6;
    /**
     * <code>NUM_PER_HOUR = 7;</code>
     */
    public static final int NUM_PER_HOUR_VALUE = 7;
    /**
     * <code>MAX_IO_THROUGHPUT = 8;</code>
     */
    public static final int MAX_IO_THROUGHPUT_VALUE = 8;
    /**
     * <code>AVG_IO_THROUGHPUT = 9;</code>
     */
    public static final int AVG_IO_THROUGHPUT_VALUE = 9;
    /**
     * <code>PENDING_QUERIES = 10;</code>
     */
    public static final int PENDING_QUERIES_VALUE = 10;


    public final int getNumber() { return value; }

    public static Query valueOf(int value) {
      switch (value) {
        case 1: return SUBMITTED;
        case 2: return COMPLETED;
        case 3: return RUNNING;
        case 4: return ERROR;
        case 5: return FAILED;
        case 6: return KILLED;
        case 7: return NUM_PER_HOUR;
        case 8: return MAX_IO_THROUGHPUT;
        case 9: return AVG_IO_THROUGHPUT;
        case 10: return PENDING_QUERIES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Query>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Query>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Query>() {
            public Query findValueByNumber(int number) {
              return Query.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.apache.tajo.metrics.Master.getDescriptor().getEnumTypes().get(1);
    }

    private static final Query[] VALUES = values();

    public static Query valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Query(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tajo.metrics.Query)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024master_metrics.proto\022\014tajo.metrics*\212\001\n" +
      "\007Cluster\022\n\n\006UPTIME\020\000\022\017\n\013TOTAL_NODES\020\001\022\020\n" +
      "\014ACTIVE_NODES\020\002\022\016\n\nLOST_NODES\020\003\022\020\n\014TOTAL" +
      "_MEMORY\020\004\022\017\n\013FREE_MEMORY\020\005\022\016\n\nTOTAL_VCPU" +
      "\020\006\022\r\n\tFREE_VCPU\020\007*\252\001\n\005Query\022\r\n\tSUBMITTED" +
      "\020\001\022\r\n\tCOMPLETED\020\002\022\013\n\007RUNNING\020\003\022\t\n\005ERROR\020" +
      "\004\022\n\n\006FAILED\020\005\022\n\n\006KILLED\020\006\022\020\n\014NUM_PER_HOU" +
      "R\020\007\022\025\n\021MAX_IO_THROUGHPUT\020\010\022\025\n\021AVG_IO_THR" +
      "OUGHPUT\020\t\022\023\n\017PENDING_QUERIES\020\nB\'\n\027org.ap" +
      "ache.tajo.metricsB\006Master\210\001\000\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
