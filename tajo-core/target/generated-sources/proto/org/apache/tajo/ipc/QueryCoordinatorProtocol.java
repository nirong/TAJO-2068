// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: QueryCoordinatorProtocol.proto

package org.apache.tajo.ipc;

public final class QueryCoordinatorProtocol {
  private QueryCoordinatorProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf service {@code hadoop.yarn.QueryCoordinatorProtocolService}
   */
  public static abstract class QueryCoordinatorProtocolService
      implements com.google.protobuf.Service {
    protected QueryCoordinatorProtocolService() {}

    public interface Interface {
      /**
       * <code>rpc heartbeat(.TajoHeartbeatRequest) returns (.TajoHeartbeatResponse);</code>
       */
      public abstract void heartbeat(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ResourceProtos.TajoHeartbeatRequest request,
          com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.TajoHeartbeatResponse> done);

      /**
       * <code>rpc reserveNodeResources(.NodeResourceRequest) returns (.NodeResourceResponse);</code>
       */
      public abstract void reserveNodeResources(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ResourceProtos.NodeResourceRequest request,
          com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.NodeResourceResponse> done);

      /**
       * <code>rpc getAllWorkers(.NullProto) returns (.WorkerConnectionsResponse);</code>
       */
      public abstract void getAllWorkers(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto request,
          com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.WorkerConnectionsResponse> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new QueryCoordinatorProtocolService() {
        @java.lang.Override
        public  void heartbeat(
            com.google.protobuf.RpcController controller,
            org.apache.tajo.ResourceProtos.TajoHeartbeatRequest request,
            com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.TajoHeartbeatResponse> done) {
          impl.heartbeat(controller, request, done);
        }

        @java.lang.Override
        public  void reserveNodeResources(
            com.google.protobuf.RpcController controller,
            org.apache.tajo.ResourceProtos.NodeResourceRequest request,
            com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.NodeResourceResponse> done) {
          impl.reserveNodeResources(controller, request, done);
        }

        @java.lang.Override
        public  void getAllWorkers(
            com.google.protobuf.RpcController controller,
            org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto request,
            com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.WorkerConnectionsResponse> done) {
          impl.getAllWorkers(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.heartbeat(controller, (org.apache.tajo.ResourceProtos.TajoHeartbeatRequest)request);
            case 1:
              return impl.reserveNodeResources(controller, (org.apache.tajo.ResourceProtos.NodeResourceRequest)request);
            case 2:
              return impl.getAllWorkers(controller, (org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.apache.tajo.ResourceProtos.TajoHeartbeatRequest.getDefaultInstance();
            case 1:
              return org.apache.tajo.ResourceProtos.NodeResourceRequest.getDefaultInstance();
            case 2:
              return org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.apache.tajo.ResourceProtos.TajoHeartbeatResponse.getDefaultInstance();
            case 1:
              return org.apache.tajo.ResourceProtos.NodeResourceResponse.getDefaultInstance();
            case 2:
              return org.apache.tajo.ResourceProtos.WorkerConnectionsResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc heartbeat(.TajoHeartbeatRequest) returns (.TajoHeartbeatResponse);</code>
     */
    public abstract void heartbeat(
        com.google.protobuf.RpcController controller,
        org.apache.tajo.ResourceProtos.TajoHeartbeatRequest request,
        com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.TajoHeartbeatResponse> done);

    /**
     * <code>rpc reserveNodeResources(.NodeResourceRequest) returns (.NodeResourceResponse);</code>
     */
    public abstract void reserveNodeResources(
        com.google.protobuf.RpcController controller,
        org.apache.tajo.ResourceProtos.NodeResourceRequest request,
        com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.NodeResourceResponse> done);

    /**
     * <code>rpc getAllWorkers(.NullProto) returns (.WorkerConnectionsResponse);</code>
     */
    public abstract void getAllWorkers(
        com.google.protobuf.RpcController controller,
        org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto request,
        com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.WorkerConnectionsResponse> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.apache.tajo.ipc.QueryCoordinatorProtocol.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.heartbeat(controller, (org.apache.tajo.ResourceProtos.TajoHeartbeatRequest)request,
            com.google.protobuf.RpcUtil.<org.apache.tajo.ResourceProtos.TajoHeartbeatResponse>specializeCallback(
              done));
          return;
        case 1:
          this.reserveNodeResources(controller, (org.apache.tajo.ResourceProtos.NodeResourceRequest)request,
            com.google.protobuf.RpcUtil.<org.apache.tajo.ResourceProtos.NodeResourceResponse>specializeCallback(
              done));
          return;
        case 2:
          this.getAllWorkers(controller, (org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto)request,
            com.google.protobuf.RpcUtil.<org.apache.tajo.ResourceProtos.WorkerConnectionsResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.apache.tajo.ResourceProtos.TajoHeartbeatRequest.getDefaultInstance();
        case 1:
          return org.apache.tajo.ResourceProtos.NodeResourceRequest.getDefaultInstance();
        case 2:
          return org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.apache.tajo.ResourceProtos.TajoHeartbeatResponse.getDefaultInstance();
        case 1:
          return org.apache.tajo.ResourceProtos.NodeResourceResponse.getDefaultInstance();
        case 2:
          return org.apache.tajo.ResourceProtos.WorkerConnectionsResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends org.apache.tajo.ipc.QueryCoordinatorProtocol.QueryCoordinatorProtocolService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void heartbeat(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ResourceProtos.TajoHeartbeatRequest request,
          com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.TajoHeartbeatResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.apache.tajo.ResourceProtos.TajoHeartbeatResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.tajo.ResourceProtos.TajoHeartbeatResponse.class,
            org.apache.tajo.ResourceProtos.TajoHeartbeatResponse.getDefaultInstance()));
      }

      public  void reserveNodeResources(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ResourceProtos.NodeResourceRequest request,
          com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.NodeResourceResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.apache.tajo.ResourceProtos.NodeResourceResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.tajo.ResourceProtos.NodeResourceResponse.class,
            org.apache.tajo.ResourceProtos.NodeResourceResponse.getDefaultInstance()));
      }

      public  void getAllWorkers(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto request,
          com.google.protobuf.RpcCallback<org.apache.tajo.ResourceProtos.WorkerConnectionsResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.apache.tajo.ResourceProtos.WorkerConnectionsResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.tajo.ResourceProtos.WorkerConnectionsResponse.class,
            org.apache.tajo.ResourceProtos.WorkerConnectionsResponse.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public org.apache.tajo.ResourceProtos.TajoHeartbeatResponse heartbeat(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ResourceProtos.TajoHeartbeatRequest request)
          throws com.google.protobuf.ServiceException;

      public org.apache.tajo.ResourceProtos.NodeResourceResponse reserveNodeResources(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ResourceProtos.NodeResourceRequest request)
          throws com.google.protobuf.ServiceException;

      public org.apache.tajo.ResourceProtos.WorkerConnectionsResponse getAllWorkers(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public org.apache.tajo.ResourceProtos.TajoHeartbeatResponse heartbeat(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ResourceProtos.TajoHeartbeatRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.tajo.ResourceProtos.TajoHeartbeatResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.apache.tajo.ResourceProtos.TajoHeartbeatResponse.getDefaultInstance());
      }


      public org.apache.tajo.ResourceProtos.NodeResourceResponse reserveNodeResources(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ResourceProtos.NodeResourceRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.tajo.ResourceProtos.NodeResourceResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.apache.tajo.ResourceProtos.NodeResourceResponse.getDefaultInstance());
      }


      public org.apache.tajo.ResourceProtos.WorkerConnectionsResponse getAllWorkers(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.tajo.ResourceProtos.WorkerConnectionsResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.apache.tajo.ResourceProtos.WorkerConnectionsResponse.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:hadoop.yarn.QueryCoordinatorProtocolService)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036QueryCoordinatorProtocol.proto\022\013hadoop" +
      ".yarn\032\025PrimitiveProtos.proto\032\024ResourcePr" +
      "otos.proto2\333\001\n\037QueryCoordinatorProtocolS" +
      "ervice\022:\n\theartbeat\022\025.TajoHeartbeatReque" +
      "st\032\026.TajoHeartbeatResponse\022C\n\024reserveNod" +
      "eResources\022\024.NodeResourceRequest\032\025.NodeR" +
      "esourceResponse\0227\n\rgetAllWorkers\022\n.NullP" +
      "roto\032\032.WorkerConnectionsResponseB5\n\023org." +
      "apache.tajo.ipcB\030QueryCoordinatorProtoco" +
      "l\210\001\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.getDescriptor(),
          org.apache.tajo.ResourceProtos.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
